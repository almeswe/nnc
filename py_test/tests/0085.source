let buf: u8[16];
let stdout: u8 = 1u8;

fn ext write(fd: i32, buf: u8*, size: u32): u32;

fn memset(mem: u8*, val: u8, size: i32) {
    for (let i: u32 = 0; i < size; i = i + 1) {
        mem[i] = val;
    }
}

fn print_num(val: u32) {
    if (val == 0) {
        write(stdout, "0", 1);
    }
    let i: i32 = (i32)lengthof(buf);
    let s: i32 = 0;
    memset(buf, 0u8, i);
    for (; val && i; i = i - 1, val = val / 10, s = s + 1) {
        buf[i] = "0123456789"[val % 10];
    }
    write(stdout, buf+i+1, s);
}

fn println_num(val: u32) {
    print_num(val);
    write(stdout, "\r\n", 2u32);
}

fn factorial(i: u32): u32 {
    if (i < 2u32) {
        return i;
    }
    else {
        return i * factorial(i - 1u32);
    }
}

pub fn main(): i32 {
    for (let count: i32 = 1; count <= 10; count = count + 1) {
        println_num(factorial(count));
    }
}