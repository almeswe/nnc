let buf: u8[16];
let stdout: u8 = 1u8;

fn memset(mem: u8*, val: u8, size: i32) {
    for (let i: u32 = 0; i < size; i = i + 1) {
        mem[i] = val;
    }
}

fn checksum(mem: u8*, size: i32): u64 {
    let sum: u64 = 0u64;
    for (let i: u32 = 0; i < size; i = i + 1) {
        sum = sum + mem[i];
    }
    return sum;
}

fn ext write(fd: i32, buf: u8*, size: u32): u32;

fn print_num(val: u32) {
    let i: i32 = (i32)lengthof(buf);
    let s: i32 = 0;
    memset(buf, 0u8, i);
    for (; val && i; i = i - 1, val = val / 10, s = s + 1) {
        buf[i] = "0123456789"[val % 10];
    }
    write(stdout, buf+i+1, s);
}

fn print_crlf() {
    write(stdout, "\r\n", 2u32);
}

fn main(): u64 {
    let buflen: i32 = (i32)lengthof(buf);
    if (checksum(buf, buflen) != 0) {
        return 1;
    }
    memset(buf, '1', buflen);
    if (checksum(buf, buflen) == 0) {
        return 1;
    }
    memset(buf, 0u8, buflen);
    if (checksum(buf, buflen) != 0) {
        return 1;
    }
    let a: i32 = 1;
    let p: i32 = 0;
    let t: i32 = 0;
    while (a < 100) {
        print_num(a);
        print_crlf();
        t = a;
        a = t + p;
        p = t;
    }
    return 0;
}