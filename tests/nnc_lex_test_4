#include "nnc_core.h"

nnc_arena glob_arena;
nnc_exception_stack glob_exception_stack;

static nnc_i32 nnc_main(nnc_i32 argc, char** argv) {
    nnc_lex l = { 0 };
    TRY {
        nnc_lex_init(&l, argv[1]);
        for (;;) {
            nnc_tok_kind tok = nnc_lex_next(&l);
            printf("%s: %s\n", nnc_tok_str(tok), nnc_ctx_tostr(&l.cctx));
            if (tok == TOK_EOF) {
                break;
            }
        }
        ETRY;
    }
    CATCH (NNC_LEX_BAD_FILE) {
        nnc_abort(sformat("%s: %s\n", CATCHED.repr,
            CATCHED.what), NULL);
    }
    return EXIT_SUCCESS;
}

nnc_i32 main(nnc_i32 argc, char** argv) {
    nnc_arena_init(&glob_arena);
    nnc_i32 status = nnc_main(argc, argv);
    nnc_arena_fini(&glob_arena);
    return status;
}